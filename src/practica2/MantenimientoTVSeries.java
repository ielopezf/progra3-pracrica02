/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author irmal
 */
public class MantenimientoTVSeries extends javax.swing.JFrame {
    public TVSerieTableModel tvSerieTModel= new TVSerieTableModel();
    //establecer conexión
    private Connection conexion;
    /**
     * Creates new form MantenimientoTVSeries
     */
    public MantenimientoTVSeries() {
        initComponents();
        //procesos
        inicializarColumnas();
        conectar();
        consultaInicial();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ActualizarBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        CodigoActualizarTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        EstrenoActualizarTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        BorrarBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        CodigoBorrarTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTV = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Mantenimiento TV Series");

        jPanel1.setBackground(new java.awt.Color(232, 232, 255));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));

        ActualizarBtn.setText("Actualizar");
        ActualizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarBtnActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Código serie");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Estreno");

        EstrenoActualizarTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstrenoActualizarTxtActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(153, 0, 0));
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Ingrese los valores que se actulizarán");

        jLabel7.setForeground(new java.awt.Color(153, 0, 0));
        jLabel7.setText("*Solo se actualiza para los que tengan un código entre 110-119 y que  se hayan estrenado después del 2019");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap(153, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CodigoActualizarTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addComponent(EstrenoActualizarTxt)))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ActualizarBtn)
                        .addGap(61, 61, 61))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(ActualizarBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(CodigoActualizarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(EstrenoActualizarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(232, 232, 255));

        BorrarBtn.setText("Borrar");
        BorrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarBtnActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Código  serie");

        CodigoBorrarTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodigoBorrarTxtActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(204, 0, 51));
        jLabel6.setText("*Solo se borrarán aquellos que tengan duración entre 25 y 30 minutos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(52, 52, 52)
                        .addComponent(CodigoBorrarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BorrarBtn)
                        .addGap(55, 55, 55))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CodigoBorrarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BorrarBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(37, 37, 37))
        );

        tablaTV.setModel(tvSerieTModel);
        jScrollPane1.setViewportView(tablaTV);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(jLabel1)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EstrenoActualizarTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstrenoActualizarTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EstrenoActualizarTxtActionPerformed

    private void BorrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarBtnActionPerformed
        // TODO add your handling code here:
        tvSerieTModel.serie.clear();
        //iniicar búsqueda
        try{
            PreparedStatement statement = null;
            String codigo= CodigoBorrarTxt.getText();
           // String nombre= nombreBorrartxt.getText();
            String sentenciaSql = "DELETE FROM tvserie  WHERE ";
            //en sentenciasql hacemos la dml
            if(!codigo.isEmpty()){
              
                  sentenciaSql+="  codtvserie  = ?  AND duraciontvserie >=25 AND  duraciontvserie <=30 ";
                  statement= this.conexion.prepareStatement(sentenciaSql);
                  statement.setString(1, codigo );
                  
                  statement.executeUpdate();
                    
             JOptionPane.showMessageDialog(this, "Elimino correctamente "+ codigo );
            
            }//if empty
                 
             UpdateJTable();
            tablaTV.repaint();
          
        }//fin try
         catch(SQLException ex){
             Logger.getLogger(MantenimientoTVSeries.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error al recuperar los productos de la base de datos");
            ex.printStackTrace();
        }
        CodigoBorrarTxt.setText(" ");
    }//GEN-LAST:event_BorrarBtnActionPerformed

    private void ActualizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarBtnActionPerformed
        // TODO add your handling code here:
        //limpiar la tabla
        tvSerieTModel.serie.clear();

        TVSerie tv= new TVSerie();
        //iniicar búsqueda
        try{
            PreparedStatement statement = null;
            tv.codigo= CodigoActualizarTxt.getText();
            tv.estreno= Double.parseDouble(EstrenoActualizarTxt.getText());
            String sentenciaSql = "UPDATE tvserie ";
            //en sentenciasql hacemos la dml
            if(!CodigoActualizarTxt.getText().isEmpty()){
               
                  sentenciaSql+="SET estrenotvserie = ? WHERE codtvserie =? AND codtvserie BETWEEN '110_' AND '119_' AND estrenotvserie > 2019;";
                    statement= this.conexion.prepareStatement(sentenciaSql);
                    
                  statement.setDouble(1,  Double.valueOf(EstrenoActualizarTxt.getText()) );
                   statement.setString(2, CodigoActualizarTxt.getText());
                  statement.executeUpdate();
             JOptionPane.showMessageDialog(this, "Actualizó correctamente "+ CodigoActualizarTxt.getText());
                      
            }
           
            UpdateJTable();
            tablaTV.repaint();
        }//fin try
         catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "Error al recuperar los productos de la base de datos");
            ex.printStackTrace();
        }
        CodigoActualizarTxt.setText(" ");
        EstrenoActualizarTxt.setText(" ");
    }//GEN-LAST:event_ActualizarBtnActionPerformed

    private void CodigoBorrarTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodigoBorrarTxtActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_CodigoBorrarTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MantenimientoTVSeries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MantenimientoTVSeries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MantenimientoTVSeries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MantenimientoTVSeries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MantenimientoTVSeries().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActualizarBtn;
    private javax.swing.JButton BorrarBtn;
    private javax.swing.JTextField CodigoActualizarTxt;
    private javax.swing.JTextField CodigoBorrarTxt;
    private javax.swing.JTextField EstrenoActualizarTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaTV;
    // End of variables declaration//GEN-END:variables

    private void inicializarColumnas() {
        TableColumnModel tCM= new DefaultTableColumnModel();
        for (int i = 0; i < 6; i++) {
            //crear columnas
            TableColumn col= new TableColumn(i);
            //asignarles nombre a cada col
            switch(i){
                case 0:{col.setHeaderValue("Código TV Serie");break;}
                case 1:{col.setHeaderValue("Nombre TV serie");break;}
                case 2:{col.setHeaderValue("Creador TV serie");break;}
                case 3:{col.setHeaderValue("Estreno TV serie");break;}
                case 4:{col.setHeaderValue("Duracion TV serie");break;}
                     }//fin sw
            tCM.addColumn(col);
        }//fin for
        
     tablaTV.setColumnModel(tCM);
    }//fin inicializar

    private void conectar() {
        try{
            conexion= DriverManager.getConnection("jdbc:postgresql://localhost:5432/practica2","practica2", "practica2");}//fin try
        catch(SQLException ex){
            Logger.getLogger(MantenimientoTVSeries.class.getName()).log(Level.SEVERE, null ,ex);
                                }//fin catch   
    }//fin conectar

    private void consultaInicial() {
try{
         String sentenciaSql="SELECT * FROM tvserie";
         Statement statement = this.conexion.createStatement();
          ResultSet res= statement.executeQuery(sentenciaSql);
          while(res.next()){
              TVSerie t= new TVSerie();
         t.codigo=res.getString("codtvserie");
         t.nombre=res.getString("nombretvserie");
         t.creador=res.getString("creadortvserie");
         t.estreno=res.getDouble("estrenotvserie");
         t.duracion=res.getDouble("duraciontvserie");
         
             //añadir productos de la db a la tabla
             tvSerieTModel.serie.add(t);
             
          }//while
          tablaTV.repaint();
          
     }//fin try
     catch(SQLException ex){
         JOptionPane.showMessageDialog(this,"Error al recuperar los productos de la base de datos");
         ex.printStackTrace();
     }//fin catch
         }//fin consulta

    private void UpdateJTable() {
       tvSerieTModel.serie.clear();
    try {
        PreparedStatement statement =null;
         String sentenciaSql = "SELECT * FROM tvserie ";
        statement = this.conexion.prepareStatement(sentenciaSql);
        ResultSet res = statement.executeQuery();
        
        while (res.next()) {
          TVSerie t= new TVSerie();
         t.codigo=res.getString("codtvserie");
         t.nombre=res.getString("nombretvserie");
         t.creador=res.getString("creadortvserie");
         t.estreno=res.getDouble("estrenotvserie");
         t.duracion=res.getDouble("duraciontvserie");
         
             //añadir productos de la db a la tabla
              tvSerieTModel.serie.add(t);
        }//while
        tablaTV.repaint();
    } catch (SQLException ex) {
         Logger.getLogger(MantenimientoTVSeries.class.getName()).log(Level.SEVERE, null, ex);
         ex.printStackTrace();
     }//catch
    }
}
